openapi: 3.0.0
info:
  description: ''
  version: "1.0.0"
  title: 'Meme-server'
 
paths:
  /api/v1/accounts/{AccountId}/check-duplicates:
    post:
      parameters:
        - $ref: "#/components/parameters/AccountId"
      operationId: "CheckDuplicates"
      responses:
        200:
          description: ok
  /api/v1/accounts/{AccountId}/update-ocr:
    post:
      parameters:
        - $ref: "#/components/parameters/AccountId"
      operationId: "UpdateOcr"
      responses:
        200:
          description: ok
  
  /api/v1/accounts/{AccountId}/update-ocr/{MemeId}:
    post:
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/MemeId"
      operationId: "UpdateOcrOne"
      responses:
        200:
          description: ok

  /api/v1/accounts/{AccountId}/meme:
    get:
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/MemeQuery"
        - $ref: "#/components/parameters/SearchAfterId"
        - $ref: "#/components/parameters/PageSize"
      operationId: "SearchMeme"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchMemeDto"
    post:
      operationId: "CreateMeme"
      parameters:
        - $ref: "#/components/parameters/AccountId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageDto"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMemeResponseDto"


  /api/v1/accounts/{AccountId}/meme/{MemeId}/image/url:
    get:
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/MemeId"
      operationId: "GetMemeImageUrl"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageUrlDto"

  /api/v1/accounts/{AccountId}/meme/{MemeId}/image/thumb/url:
    get:
      parameters:
        - $ref: "#/components/parameters/AccountId"
        - $ref: "#/components/parameters/MemeId"
      operationId: "GetMemeImageThumbUrl"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageUrlDto"
components: 
  parameters:
    MemeQuery:
      in: query
      required: true
      name: MemeQuery
      schema:
        type: string
    SearchAfterId:
      in: query
      required: false
      name: SearchAfterSortId
      schema:
        type: integer
        format: int64
    PageSize:
      in: query
      required: false
      name: PageSize
      schema:
        type: integer
      
    MemeId:
      in: path
      required: true
      name: MemeId
      schema:
        type: string
        format: uuid

    AccountId:
      in: path
      required: true
      name: AccountId
      schema:
        type: string
        format: uuid

  schemas:    
    ImageUrlDto:
      type: object
      properties:
        Url:
          type: string

    SearchMemeThumb:
      type: object
      properties:
        ThumbUrl:
          type: string
        ThumbWidth:
          type: integer
        ThumbHeight:
          type: integer
        
    SearchMemeDto:
      type: object
      properties:
        Id:
          type: string
          format: uuid
        SortId:
          type: integer
          format: int64
        OcrResult:
          type: string
        OcrResultHighlight:
          type: array
          items:
            type: string
        ImageUrl:
          type: string
        Thumbnail:
          $ref: "#/components/schemas/SearchMemeThumb"
        Hash:
          type: string

    CreateMemeResponseDto:
      type: object
      properties:
        Id:
          type: string
          format: uuid
        OcrResult:
          type: string
        Hash:
          type: string
        DuplicateStatus:
          $ref: "#/components/schemas/DuplicateStatus"
        
    ImageDto:
      type: object
      properties:
        MimeType:
          type: string
        ImageBase64:
          type: string

    DuplicateStatus:
      type: string
      enum:
        - duplicate_image
        - duplicate_hash
        - new

